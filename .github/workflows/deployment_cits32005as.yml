name: Build and deploy Dockerized Node.js app to Azure Web App - cits32005as

on:
  push:
    branches:
      - deployment
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Set environment variables from secrets
      - name: Set environment variables
        run: |
          echo "AZURE_AD_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }}" >> $GITHUB_ENV
          echo "AZURE_AD_CLIENT_SECRET=${{ secrets.AZURE_AD_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "AZURE_AD_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }}" >> $GITHUB_ENV
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> $GITHUB_ENV
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SDR_URL=${{ secrets.NEXT_PUBLIC_SDR_URL }}" >> $GITHUB_ENV

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Build Docker Compose services
      - name: Build Docker Compose services
        run: docker-compose -f docker-compose.yml build
        env:
          AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          AZURE_AD_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXT_PUBLIC_BACKEND_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
          NEXT_PUBLIC_SDR_URL: ${{ secrets.NEXT_PUBLIC_SDR_URL }}

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Docker images to DockerHub
      - name: Push Docker images to DockerHub
        run: docker-compose -f docker-compose.yml push

      # Upload artifact for deployment job
      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .  # Upload the contents of the current directory

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # Download the Docker images from DockerHub (Azure will pull them as part of deployment)
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      # Deploy Docker containers to Azure Web App for Containers
      - name: 'Deploy to Azure Web App for Containers'
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'cits32005as'
          images: |
            web: yelaoshi/web:latest
            frontend: yelaoshi/frontend:latest
            db: yelaoshi/db:latest
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_59C
