name: Build, push, and deploy Dockerized CITS3200 App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push web image
      - name: Build and push web image
        run: |
          docker build --platform linux/amd64 \
            --build-arg NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} \
            --build-arg NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} \
            --build-arg NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }} \
            --build-arg NEXT_PUBLIC_SDR_URL=${{ secrets.NEXT_PUBLIC_SDR_URL }} \
            --build-arg AZURE_AD_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }} \
            --build-arg AZURE_AD_CLIENT_SECRET=${{ secrets.AZURE_AD_CLIENT_SECRET }} \
            --build-arg AZURE_AD_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }} \
            -t ${{ secrets.DOCKER_USERNAME }}/web:latest -f Dockerfile.web .
          docker push ${{ secrets.DOCKER_USERNAME }}/web:latest

      # Build and push frontend image
      - name: Build and push frontend image
        run: |
          docker build --platform linux/amd64 \
            --build-arg NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} \
            --build-arg NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} \
            --build-arg NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }} \
            --build-arg NEXT_PUBLIC_SDR_URL=${{ secrets.NEXT_PUBLIC_SDR_URL }} \
            --build-arg AZURE_AD_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }} \
            --build-arg AZURE_AD_CLIENT_SECRET=${{ secrets.AZURE_AD_CLIENT_SECRET }} \
            --build-arg AZURE_AD_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }} \
            -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f Dockerfile.frontend .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      # Build and push db image
      - name: Build and push db image
        run: |
          docker build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/db:latest -f Dockerfile.db .
          docker push ${{ secrets.DOCKER_USERNAME }}/db:latest

      # Build and push nginx image
      - name: Build and push nginx image
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/nginx-custom:latest -f Dockerfile.nginx .
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx-custom:latest
